// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: object/types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NeoFS.API.v2.Object {

  /// <summary>Holder for reflection information generated from object/types.proto</summary>
  public static partial class TypesReflection {

    #region Descriptor
    /// <summary>File descriptor for object/types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJvYmplY3QvdHlwZXMucHJvdG8SEG5lby5mcy52Mi5vYmplY3QaEHJlZnMv",
            "dHlwZXMucHJvdG8aE3Nlc3Npb24vdHlwZXMucHJvdG8ixQEKC1Nob3J0SGVh",
            "ZGVyEigKB3ZlcnNpb24YASABKAsyFy5uZW8uZnMudjIucmVmcy5WZXJzaW9u",
            "EhYKDmNyZWF0aW9uX2Vwb2NoGAIgASgEEikKCG93bmVyX2lkGAMgASgLMhcu",
            "bmVvLmZzLnYyLnJlZnMuT3duZXJJRBIxCgtvYmplY3RfdHlwZRgEIAEoDjIc",
            "Lm5lby5mcy52Mi5vYmplY3QuT2JqZWN0VHlwZRIWCg5wYXlsb2FkX2xlbmd0",
            "aBgFIAEoBCKRBgoGSGVhZGVyEigKB3ZlcnNpb24YASABKAsyFy5uZW8uZnMu",
            "djIucmVmcy5WZXJzaW9uEjEKDGNvbnRhaW5lcl9pZBgCIAEoCzIbLm5lby5m",
            "cy52Mi5yZWZzLkNvbnRhaW5lcklEEikKCG93bmVyX2lkGAMgASgLMhcubmVv",
            "LmZzLnYyLnJlZnMuT3duZXJJRBIWCg5jcmVhdGlvbl9lcG9jaBgEIAEoBBIW",
            "Cg5wYXlsb2FkX2xlbmd0aBgFIAEoBBIuCgxwYXlsb2FkX2hhc2gYBiABKAsy",
            "GC5uZW8uZnMudjIucmVmcy5DaGVja3N1bRIxCgtvYmplY3RfdHlwZRgHIAEo",
            "DjIcLm5lby5mcy52Mi5vYmplY3QuT2JqZWN0VHlwZRIyChBob21vbW9ycGhp",
            "Y19oYXNoGAggASgLMhgubmVvLmZzLnYyLnJlZnMuQ2hlY2tzdW0SNgoNc2Vz",
            "c2lvbl90b2tlbhgJIAEoCzIfLm5lby5mcy52Mi5zZXNzaW9uLlNlc3Npb25U",
            "b2tlbhI2CgphdHRyaWJ1dGVzGAogAygLMiIubmVvLmZzLnYyLm9iamVjdC5I",
            "ZWFkZXIuQXR0cmlidXRlEi0KBXNwbGl0GAsgASgLMh4ubmVvLmZzLnYyLm9i",
            "amVjdC5IZWFkZXIuU3BsaXQaJwoJQXR0cmlidXRlEgsKA2tleRgBIAEoCRIN",
            "CgV2YWx1ZRgCIAEoCRrvAQoFU3BsaXQSKAoGcGFyZW50GAEgASgLMhgubmVv",
            "LmZzLnYyLnJlZnMuT2JqZWN0SUQSKgoIcHJldmlvdXMYAiABKAsyGC5uZW8u",
            "ZnMudjIucmVmcy5PYmplY3RJRBIzChBwYXJlbnRfc2lnbmF0dXJlGAMgASgL",
            "MhkubmVvLmZzLnYyLnJlZnMuU2lnbmF0dXJlEi8KDXBhcmVudF9oZWFkZXIY",
            "BCABKAsyGC5uZW8uZnMudjIub2JqZWN0LkhlYWRlchIqCghjaGlsZHJlbhgF",
            "IAMoCzIYLm5lby5mcy52Mi5yZWZzLk9iamVjdElEIp4BCgZPYmplY3QSKwoJ",
            "b2JqZWN0X2lkGAEgASgLMhgubmVvLmZzLnYyLnJlZnMuT2JqZWN0SUQSLAoJ",
            "c2lnbmF0dXJlGAIgASgLMhkubmVvLmZzLnYyLnJlZnMuU2lnbmF0dXJlEigK",
            "BmhlYWRlchgDIAEoCzIYLm5lby5mcy52Mi5vYmplY3QuSGVhZGVyEg8KB3Bh",
            "eWxvYWQYBCABKAwqOwoKT2JqZWN0VHlwZRILCgdSRUdVTEFSEAASDQoJVE9N",
            "QlNUT05FEAESEQoNU1RPUkFHRV9HUk9VUBACKjkKCU1hdGNoVHlwZRIaChZN",
            "QVRDSF9UWVBFX1VOU1BFQ0lGSUVEEAASEAoMU1RSSU5HX0VRVUFMEAFCT1o3",
            "Z2l0aHViLmNvbS9uc3BjYy1kZXYvbmVvZnMtYXBpLWdvL3YyL29iamVjdC9n",
            "cnBjO29iamVjdKoCE05lb0ZTLkFQSS52Mi5PYmplY3RiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NeoFS.API.v2.Refs.TypesReflection.Descriptor, global::NeoFS.API.v2.Session.TypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::NeoFS.API.v2.Object.ObjectType), typeof(global::NeoFS.API.v2.Object.MatchType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Object.ShortHeader), global::NeoFS.API.v2.Object.ShortHeader.Parser, new[]{ "Version", "CreationEpoch", "OwnerId", "ObjectType", "PayloadLength" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Object.Header), global::NeoFS.API.v2.Object.Header.Parser, new[]{ "Version", "ContainerId", "OwnerId", "CreationEpoch", "PayloadLength", "PayloadHash", "ObjectType", "HomomorphicHash", "SessionToken", "Attributes", "Split" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Object.Header.Types.Attribute), global::NeoFS.API.v2.Object.Header.Types.Attribute.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Object.Header.Types.Split), global::NeoFS.API.v2.Object.Header.Types.Split.Parser, new[]{ "Parent", "Previous", "ParentSignature", "ParentHeader", "Children" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.v2.Object.Object), global::NeoFS.API.v2.Object.Object.Parser, new[]{ "ObjectId", "Signature", "Header", "Payload" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Type of the object payload content
  /// </summary>
  public enum ObjectType {
    /// <summary>
    /// Just a normal object
    /// </summary>
    [pbr::OriginalName("REGULAR")] Regular = 0,
    /// <summary>
    /// Used internally to identify deleted objects
    /// </summary>
    [pbr::OriginalName("TOMBSTONE")] Tombstone = 1,
    /// <summary>
    /// Identifies that the object holds StorageGroup information
    /// </summary>
    [pbr::OriginalName("STORAGE_GROUP")] StorageGroup = 2,
  }

  /// <summary>
  /// Type of match expression
  /// </summary>
  public enum MatchType {
    /// <summary>
    /// Unknown. Not used
    /// </summary>
    [pbr::OriginalName("MATCH_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Full string match
    /// </summary>
    [pbr::OriginalName("STRING_EQUAL")] StringEqual = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Short header fields
  /// </summary>
  public sealed partial class ShortHeader : pb::IMessage<ShortHeader> {
    private static readonly pb::MessageParser<ShortHeader> _parser = new pb::MessageParser<ShortHeader>(() => new ShortHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShortHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.v2.Object.TypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShortHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShortHeader(ShortHeader other) : this() {
      version_ = other.version_ != null ? other.version_.Clone() : null;
      creationEpoch_ = other.creationEpoch_;
      ownerId_ = other.ownerId_ != null ? other.ownerId_.Clone() : null;
      objectType_ = other.objectType_;
      payloadLength_ = other.payloadLength_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShortHeader Clone() {
      return new ShortHeader(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private global::NeoFS.API.v2.Refs.Version version_;
    /// <summary>
    /// Object format version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Version Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "creation_epoch" field.</summary>
    public const int CreationEpochFieldNumber = 2;
    private ulong creationEpoch_;
    /// <summary>
    /// Epoch when the object was created
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CreationEpoch {
      get { return creationEpoch_; }
      set {
        creationEpoch_ = value;
      }
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 3;
    private global::NeoFS.API.v2.Refs.OwnerID ownerId_;
    /// <summary>
    /// Object's owner
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.OwnerID OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = value;
      }
    }

    /// <summary>Field number for the "object_type" field.</summary>
    public const int ObjectTypeFieldNumber = 4;
    private global::NeoFS.API.v2.Object.ObjectType objectType_ = global::NeoFS.API.v2.Object.ObjectType.Regular;
    /// <summary>
    /// Type of the object payload content
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Object.ObjectType ObjectType {
      get { return objectType_; }
      set {
        objectType_ = value;
      }
    }

    /// <summary>Field number for the "payload_length" field.</summary>
    public const int PayloadLengthFieldNumber = 5;
    private ulong payloadLength_;
    /// <summary>
    /// Size of payload in bytes.
    /// 0xFFFFFFFFFFFFFFFF means `payload_length` is unknown
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PayloadLength {
      get { return payloadLength_; }
      set {
        payloadLength_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShortHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShortHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Version, other.Version)) return false;
      if (CreationEpoch != other.CreationEpoch) return false;
      if (!object.Equals(OwnerId, other.OwnerId)) return false;
      if (ObjectType != other.ObjectType) return false;
      if (PayloadLength != other.PayloadLength) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (version_ != null) hash ^= Version.GetHashCode();
      if (CreationEpoch != 0UL) hash ^= CreationEpoch.GetHashCode();
      if (ownerId_ != null) hash ^= OwnerId.GetHashCode();
      if (ObjectType != global::NeoFS.API.v2.Object.ObjectType.Regular) hash ^= ObjectType.GetHashCode();
      if (PayloadLength != 0UL) hash ^= PayloadLength.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (version_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Version);
      }
      if (CreationEpoch != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(CreationEpoch);
      }
      if (ownerId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OwnerId);
      }
      if (ObjectType != global::NeoFS.API.v2.Object.ObjectType.Regular) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ObjectType);
      }
      if (PayloadLength != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(PayloadLength);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (CreationEpoch != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreationEpoch);
      }
      if (ownerId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnerId);
      }
      if (ObjectType != global::NeoFS.API.v2.Object.ObjectType.Regular) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ObjectType);
      }
      if (PayloadLength != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PayloadLength);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShortHeader other) {
      if (other == null) {
        return;
      }
      if (other.version_ != null) {
        if (version_ == null) {
          Version = new global::NeoFS.API.v2.Refs.Version();
        }
        Version.MergeFrom(other.Version);
      }
      if (other.CreationEpoch != 0UL) {
        CreationEpoch = other.CreationEpoch;
      }
      if (other.ownerId_ != null) {
        if (ownerId_ == null) {
          OwnerId = new global::NeoFS.API.v2.Refs.OwnerID();
        }
        OwnerId.MergeFrom(other.OwnerId);
      }
      if (other.ObjectType != global::NeoFS.API.v2.Object.ObjectType.Regular) {
        ObjectType = other.ObjectType;
      }
      if (other.PayloadLength != 0UL) {
        PayloadLength = other.PayloadLength;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (version_ == null) {
              Version = new global::NeoFS.API.v2.Refs.Version();
            }
            input.ReadMessage(Version);
            break;
          }
          case 16: {
            CreationEpoch = input.ReadUInt64();
            break;
          }
          case 26: {
            if (ownerId_ == null) {
              OwnerId = new global::NeoFS.API.v2.Refs.OwnerID();
            }
            input.ReadMessage(OwnerId);
            break;
          }
          case 32: {
            ObjectType = (global::NeoFS.API.v2.Object.ObjectType) input.ReadEnum();
            break;
          }
          case 40: {
            PayloadLength = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Object Headers
  /// </summary>
  public sealed partial class Header : pb::IMessage<Header> {
    private static readonly pb::MessageParser<Header> _parser = new pb::MessageParser<Header>(() => new Header());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Header> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.v2.Object.TypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header(Header other) : this() {
      version_ = other.version_ != null ? other.version_.Clone() : null;
      containerId_ = other.containerId_ != null ? other.containerId_.Clone() : null;
      ownerId_ = other.ownerId_ != null ? other.ownerId_.Clone() : null;
      creationEpoch_ = other.creationEpoch_;
      payloadLength_ = other.payloadLength_;
      payloadHash_ = other.payloadHash_ != null ? other.payloadHash_.Clone() : null;
      objectType_ = other.objectType_;
      homomorphicHash_ = other.homomorphicHash_ != null ? other.homomorphicHash_.Clone() : null;
      sessionToken_ = other.sessionToken_ != null ? other.sessionToken_.Clone() : null;
      attributes_ = other.attributes_.Clone();
      split_ = other.split_ != null ? other.split_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header Clone() {
      return new Header(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private global::NeoFS.API.v2.Refs.Version version_;
    /// <summary>
    /// Object format version.
    /// Effectively the version of API library used to create particular object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Version Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "container_id" field.</summary>
    public const int ContainerIdFieldNumber = 2;
    private global::NeoFS.API.v2.Refs.ContainerID containerId_;
    /// <summary>
    /// Object's container
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.ContainerID ContainerId {
      get { return containerId_; }
      set {
        containerId_ = value;
      }
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 3;
    private global::NeoFS.API.v2.Refs.OwnerID ownerId_;
    /// <summary>
    /// Object's owner
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.OwnerID OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = value;
      }
    }

    /// <summary>Field number for the "creation_epoch" field.</summary>
    public const int CreationEpochFieldNumber = 4;
    private ulong creationEpoch_;
    /// <summary>
    /// Object creation Epoch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CreationEpoch {
      get { return creationEpoch_; }
      set {
        creationEpoch_ = value;
      }
    }

    /// <summary>Field number for the "payload_length" field.</summary>
    public const int PayloadLengthFieldNumber = 5;
    private ulong payloadLength_;
    /// <summary>
    /// Size of payload in bytes.
    /// 0xFFFFFFFFFFFFFFFF means `payload_length` is unknown
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PayloadLength {
      get { return payloadLength_; }
      set {
        payloadLength_ = value;
      }
    }

    /// <summary>Field number for the "payload_hash" field.</summary>
    public const int PayloadHashFieldNumber = 6;
    private global::NeoFS.API.v2.Refs.Checksum payloadHash_;
    /// <summary>
    /// Hash of payload bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Checksum PayloadHash {
      get { return payloadHash_; }
      set {
        payloadHash_ = value;
      }
    }

    /// <summary>Field number for the "object_type" field.</summary>
    public const int ObjectTypeFieldNumber = 7;
    private global::NeoFS.API.v2.Object.ObjectType objectType_ = global::NeoFS.API.v2.Object.ObjectType.Regular;
    /// <summary>
    /// Special object type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Object.ObjectType ObjectType {
      get { return objectType_; }
      set {
        objectType_ = value;
      }
    }

    /// <summary>Field number for the "homomorphic_hash" field.</summary>
    public const int HomomorphicHashFieldNumber = 8;
    private global::NeoFS.API.v2.Refs.Checksum homomorphicHash_;
    /// <summary>
    /// Homomorphic hash of the object payload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Checksum HomomorphicHash {
      get { return homomorphicHash_; }
      set {
        homomorphicHash_ = value;
      }
    }

    /// <summary>Field number for the "session_token" field.</summary>
    public const int SessionTokenFieldNumber = 9;
    private global::NeoFS.API.v2.Session.SessionToken sessionToken_;
    /// <summary>
    /// Session token, if it was used during Object creation.
    /// Need it to verify integrity and authenticity out of Request scope.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Session.SessionToken SessionToken {
      get { return sessionToken_; }
      set {
        sessionToken_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 10;
    private static readonly pb::FieldCodec<global::NeoFS.API.v2.Object.Header.Types.Attribute> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(82, global::NeoFS.API.v2.Object.Header.Types.Attribute.Parser);
    private readonly pbc::RepeatedField<global::NeoFS.API.v2.Object.Header.Types.Attribute> attributes_ = new pbc::RepeatedField<global::NeoFS.API.v2.Object.Header.Types.Attribute>();
    /// <summary>
    /// User-defined object attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NeoFS.API.v2.Object.Header.Types.Attribute> Attributes {
      get { return attributes_; }
    }

    /// <summary>Field number for the "split" field.</summary>
    public const int SplitFieldNumber = 11;
    private global::NeoFS.API.v2.Object.Header.Types.Split split_;
    /// <summary>
    /// Position of the object in the split hierarchy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Object.Header.Types.Split Split {
      get { return split_; }
      set {
        split_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Header);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Header other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Version, other.Version)) return false;
      if (!object.Equals(ContainerId, other.ContainerId)) return false;
      if (!object.Equals(OwnerId, other.OwnerId)) return false;
      if (CreationEpoch != other.CreationEpoch) return false;
      if (PayloadLength != other.PayloadLength) return false;
      if (!object.Equals(PayloadHash, other.PayloadHash)) return false;
      if (ObjectType != other.ObjectType) return false;
      if (!object.Equals(HomomorphicHash, other.HomomorphicHash)) return false;
      if (!object.Equals(SessionToken, other.SessionToken)) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      if (!object.Equals(Split, other.Split)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (version_ != null) hash ^= Version.GetHashCode();
      if (containerId_ != null) hash ^= ContainerId.GetHashCode();
      if (ownerId_ != null) hash ^= OwnerId.GetHashCode();
      if (CreationEpoch != 0UL) hash ^= CreationEpoch.GetHashCode();
      if (PayloadLength != 0UL) hash ^= PayloadLength.GetHashCode();
      if (payloadHash_ != null) hash ^= PayloadHash.GetHashCode();
      if (ObjectType != global::NeoFS.API.v2.Object.ObjectType.Regular) hash ^= ObjectType.GetHashCode();
      if (homomorphicHash_ != null) hash ^= HomomorphicHash.GetHashCode();
      if (sessionToken_ != null) hash ^= SessionToken.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (split_ != null) hash ^= Split.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (version_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Version);
      }
      if (containerId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContainerId);
      }
      if (ownerId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OwnerId);
      }
      if (CreationEpoch != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(CreationEpoch);
      }
      if (PayloadLength != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(PayloadLength);
      }
      if (payloadHash_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PayloadHash);
      }
      if (ObjectType != global::NeoFS.API.v2.Object.ObjectType.Regular) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ObjectType);
      }
      if (homomorphicHash_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(HomomorphicHash);
      }
      if (sessionToken_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(SessionToken);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (split_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Split);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (containerId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContainerId);
      }
      if (ownerId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnerId);
      }
      if (CreationEpoch != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreationEpoch);
      }
      if (PayloadLength != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PayloadLength);
      }
      if (payloadHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PayloadHash);
      }
      if (ObjectType != global::NeoFS.API.v2.Object.ObjectType.Regular) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ObjectType);
      }
      if (homomorphicHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HomomorphicHash);
      }
      if (sessionToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionToken);
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (split_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Split);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Header other) {
      if (other == null) {
        return;
      }
      if (other.version_ != null) {
        if (version_ == null) {
          Version = new global::NeoFS.API.v2.Refs.Version();
        }
        Version.MergeFrom(other.Version);
      }
      if (other.containerId_ != null) {
        if (containerId_ == null) {
          ContainerId = new global::NeoFS.API.v2.Refs.ContainerID();
        }
        ContainerId.MergeFrom(other.ContainerId);
      }
      if (other.ownerId_ != null) {
        if (ownerId_ == null) {
          OwnerId = new global::NeoFS.API.v2.Refs.OwnerID();
        }
        OwnerId.MergeFrom(other.OwnerId);
      }
      if (other.CreationEpoch != 0UL) {
        CreationEpoch = other.CreationEpoch;
      }
      if (other.PayloadLength != 0UL) {
        PayloadLength = other.PayloadLength;
      }
      if (other.payloadHash_ != null) {
        if (payloadHash_ == null) {
          PayloadHash = new global::NeoFS.API.v2.Refs.Checksum();
        }
        PayloadHash.MergeFrom(other.PayloadHash);
      }
      if (other.ObjectType != global::NeoFS.API.v2.Object.ObjectType.Regular) {
        ObjectType = other.ObjectType;
      }
      if (other.homomorphicHash_ != null) {
        if (homomorphicHash_ == null) {
          HomomorphicHash = new global::NeoFS.API.v2.Refs.Checksum();
        }
        HomomorphicHash.MergeFrom(other.HomomorphicHash);
      }
      if (other.sessionToken_ != null) {
        if (sessionToken_ == null) {
          SessionToken = new global::NeoFS.API.v2.Session.SessionToken();
        }
        SessionToken.MergeFrom(other.SessionToken);
      }
      attributes_.Add(other.attributes_);
      if (other.split_ != null) {
        if (split_ == null) {
          Split = new global::NeoFS.API.v2.Object.Header.Types.Split();
        }
        Split.MergeFrom(other.Split);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (version_ == null) {
              Version = new global::NeoFS.API.v2.Refs.Version();
            }
            input.ReadMessage(Version);
            break;
          }
          case 18: {
            if (containerId_ == null) {
              ContainerId = new global::NeoFS.API.v2.Refs.ContainerID();
            }
            input.ReadMessage(ContainerId);
            break;
          }
          case 26: {
            if (ownerId_ == null) {
              OwnerId = new global::NeoFS.API.v2.Refs.OwnerID();
            }
            input.ReadMessage(OwnerId);
            break;
          }
          case 32: {
            CreationEpoch = input.ReadUInt64();
            break;
          }
          case 40: {
            PayloadLength = input.ReadUInt64();
            break;
          }
          case 50: {
            if (payloadHash_ == null) {
              PayloadHash = new global::NeoFS.API.v2.Refs.Checksum();
            }
            input.ReadMessage(PayloadHash);
            break;
          }
          case 56: {
            ObjectType = (global::NeoFS.API.v2.Object.ObjectType) input.ReadEnum();
            break;
          }
          case 66: {
            if (homomorphicHash_ == null) {
              HomomorphicHash = new global::NeoFS.API.v2.Refs.Checksum();
            }
            input.ReadMessage(HomomorphicHash);
            break;
          }
          case 74: {
            if (sessionToken_ == null) {
              SessionToken = new global::NeoFS.API.v2.Session.SessionToken();
            }
            input.ReadMessage(SessionToken);
            break;
          }
          case 82: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
          case 90: {
            if (split_ == null) {
              Split = new global::NeoFS.API.v2.Object.Header.Types.Split();
            }
            input.ReadMessage(Split);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Header message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Attribute groups the user-defined Key-Value pairs attached to the object
      /// </summary>
      public sealed partial class Attribute : pb::IMessage<Attribute> {
        private static readonly pb::MessageParser<Attribute> _parser = new pb::MessageParser<Attribute>(() => new Attribute());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Attribute> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::NeoFS.API.v2.Object.Header.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attribute() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attribute(Attribute other) : this() {
          key_ = other.key_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attribute Clone() {
          return new Attribute(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private string key_ = "";
        /// <summary>
        /// string key to the object attribute
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Key {
          get { return key_; }
          set {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private string value_ = "";
        /// <summary>
        /// string value of the object attribute
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Attribute);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Attribute other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Key != other.Key) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Key.Length != 0) hash ^= Key.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Key.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Key.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Attribute other) {
          if (other == null) {
            return;
          }
          if (other.Key.Length != 0) {
            Key = other.Key;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 18: {
                Value = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Information about spawning the objects through a payload splitting.
      /// </summary>
      public sealed partial class Split : pb::IMessage<Split> {
        private static readonly pb::MessageParser<Split> _parser = new pb::MessageParser<Split>(() => new Split());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Split> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::NeoFS.API.v2.Object.Header.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Split() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Split(Split other) : this() {
          parent_ = other.parent_ != null ? other.parent_.Clone() : null;
          previous_ = other.previous_ != null ? other.previous_.Clone() : null;
          parentSignature_ = other.parentSignature_ != null ? other.parentSignature_.Clone() : null;
          parentHeader_ = other.parentHeader_ != null ? other.parentHeader_.Clone() : null;
          children_ = other.children_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Split Clone() {
          return new Split(this);
        }

        /// <summary>Field number for the "parent" field.</summary>
        public const int ParentFieldNumber = 1;
        private global::NeoFS.API.v2.Refs.ObjectID parent_;
        /// <summary>
        /// Identifier of the origin object.
        /// Parent and children objects must be within the same container.
        /// Parent object_id is known only to the minor child.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NeoFS.API.v2.Refs.ObjectID Parent {
          get { return parent_; }
          set {
            parent_ = value;
          }
        }

        /// <summary>Field number for the "previous" field.</summary>
        public const int PreviousFieldNumber = 2;
        private global::NeoFS.API.v2.Refs.ObjectID previous_;
        /// <summary>
        /// Previous carries identifier of the left split neighbor.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NeoFS.API.v2.Refs.ObjectID Previous {
          get { return previous_; }
          set {
            previous_ = value;
          }
        }

        /// <summary>Field number for the "parent_signature" field.</summary>
        public const int ParentSignatureFieldNumber = 3;
        private global::NeoFS.API.v2.Refs.Signature parentSignature_;
        /// <summary>
        /// `signature` field of the parent object. Used to reconstruct parent.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NeoFS.API.v2.Refs.Signature ParentSignature {
          get { return parentSignature_; }
          set {
            parentSignature_ = value;
          }
        }

        /// <summary>Field number for the "parent_header" field.</summary>
        public const int ParentHeaderFieldNumber = 4;
        private global::NeoFS.API.v2.Object.Header parentHeader_;
        /// <summary>
        /// `header` field of the parent object. Used to reconstruct parent.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NeoFS.API.v2.Object.Header ParentHeader {
          get { return parentHeader_; }
          set {
            parentHeader_ = value;
          }
        }

        /// <summary>Field number for the "children" field.</summary>
        public const int ChildrenFieldNumber = 5;
        private static readonly pb::FieldCodec<global::NeoFS.API.v2.Refs.ObjectID> _repeated_children_codec
            = pb::FieldCodec.ForMessage(42, global::NeoFS.API.v2.Refs.ObjectID.Parser);
        private readonly pbc::RepeatedField<global::NeoFS.API.v2.Refs.ObjectID> children_ = new pbc::RepeatedField<global::NeoFS.API.v2.Refs.ObjectID>();
        /// <summary>
        /// Children carries list of identifiers of the objects generated by splitting the current.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::NeoFS.API.v2.Refs.ObjectID> Children {
          get { return children_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Split);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Split other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Parent, other.Parent)) return false;
          if (!object.Equals(Previous, other.Previous)) return false;
          if (!object.Equals(ParentSignature, other.ParentSignature)) return false;
          if (!object.Equals(ParentHeader, other.ParentHeader)) return false;
          if(!children_.Equals(other.children_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (parent_ != null) hash ^= Parent.GetHashCode();
          if (previous_ != null) hash ^= Previous.GetHashCode();
          if (parentSignature_ != null) hash ^= ParentSignature.GetHashCode();
          if (parentHeader_ != null) hash ^= ParentHeader.GetHashCode();
          hash ^= children_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (parent_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Parent);
          }
          if (previous_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Previous);
          }
          if (parentSignature_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ParentSignature);
          }
          if (parentHeader_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(ParentHeader);
          }
          children_.WriteTo(output, _repeated_children_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (parent_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parent);
          }
          if (previous_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Previous);
          }
          if (parentSignature_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParentSignature);
          }
          if (parentHeader_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParentHeader);
          }
          size += children_.CalculateSize(_repeated_children_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Split other) {
          if (other == null) {
            return;
          }
          if (other.parent_ != null) {
            if (parent_ == null) {
              Parent = new global::NeoFS.API.v2.Refs.ObjectID();
            }
            Parent.MergeFrom(other.Parent);
          }
          if (other.previous_ != null) {
            if (previous_ == null) {
              Previous = new global::NeoFS.API.v2.Refs.ObjectID();
            }
            Previous.MergeFrom(other.Previous);
          }
          if (other.parentSignature_ != null) {
            if (parentSignature_ == null) {
              ParentSignature = new global::NeoFS.API.v2.Refs.Signature();
            }
            ParentSignature.MergeFrom(other.ParentSignature);
          }
          if (other.parentHeader_ != null) {
            if (parentHeader_ == null) {
              ParentHeader = new global::NeoFS.API.v2.Object.Header();
            }
            ParentHeader.MergeFrom(other.ParentHeader);
          }
          children_.Add(other.children_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (parent_ == null) {
                  Parent = new global::NeoFS.API.v2.Refs.ObjectID();
                }
                input.ReadMessage(Parent);
                break;
              }
              case 18: {
                if (previous_ == null) {
                  Previous = new global::NeoFS.API.v2.Refs.ObjectID();
                }
                input.ReadMessage(Previous);
                break;
              }
              case 26: {
                if (parentSignature_ == null) {
                  ParentSignature = new global::NeoFS.API.v2.Refs.Signature();
                }
                input.ReadMessage(ParentSignature);
                break;
              }
              case 34: {
                if (parentHeader_ == null) {
                  ParentHeader = new global::NeoFS.API.v2.Object.Header();
                }
                input.ReadMessage(ParentHeader);
                break;
              }
              case 42: {
                children_.AddEntriesFrom(input, _repeated_children_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Object structure.
  /// </summary>
  public sealed partial class Object : pb::IMessage<Object> {
    private static readonly pb::MessageParser<Object> _parser = new pb::MessageParser<Object>(() => new Object());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Object> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.v2.Object.TypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object(Object other) : this() {
      objectId_ = other.objectId_ != null ? other.objectId_.Clone() : null;
      signature_ = other.signature_ != null ? other.signature_.Clone() : null;
      header_ = other.header_ != null ? other.header_.Clone() : null;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object Clone() {
      return new Object(this);
    }

    /// <summary>Field number for the "object_id" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private global::NeoFS.API.v2.Refs.ObjectID objectId_;
    /// <summary>
    /// Object's unique identifier.
    /// Object is content-addressed. It means id will change if header or payload
    /// changes. It's calculated as a hash of header field, which contains hash of
    /// object's payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.ObjectID ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private global::NeoFS.API.v2.Refs.Signature signature_;
    /// <summary>
    /// Signed object_id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Refs.Signature Signature {
      get { return signature_; }
      set {
        signature_ = value;
      }
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 3;
    private global::NeoFS.API.v2.Object.Header header_;
    /// <summary>
    /// Object metadata headers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.v2.Object.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 4;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// Payload bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Object);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Object other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ObjectId, other.ObjectId)) return false;
      if (!object.Equals(Signature, other.Signature)) return false;
      if (!object.Equals(Header, other.Header)) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (objectId_ != null) hash ^= ObjectId.GetHashCode();
      if (signature_ != null) hash ^= Signature.GetHashCode();
      if (header_ != null) hash ^= Header.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (objectId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObjectId);
      }
      if (signature_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Signature);
      }
      if (header_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Header);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (objectId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectId);
      }
      if (signature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
      }
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Object other) {
      if (other == null) {
        return;
      }
      if (other.objectId_ != null) {
        if (objectId_ == null) {
          ObjectId = new global::NeoFS.API.v2.Refs.ObjectID();
        }
        ObjectId.MergeFrom(other.ObjectId);
      }
      if (other.signature_ != null) {
        if (signature_ == null) {
          Signature = new global::NeoFS.API.v2.Refs.Signature();
        }
        Signature.MergeFrom(other.Signature);
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::NeoFS.API.v2.Object.Header();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (objectId_ == null) {
              ObjectId = new global::NeoFS.API.v2.Refs.ObjectID();
            }
            input.ReadMessage(ObjectId);
            break;
          }
          case 18: {
            if (signature_ == null) {
              Signature = new global::NeoFS.API.v2.Refs.Signature();
            }
            input.ReadMessage(Signature);
            break;
          }
          case 26: {
            if (header_ == null) {
              Header = new global::NeoFS.API.v2.Object.Header();
            }
            input.ReadMessage(Header);
            break;
          }
          case 34: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
